<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.greyu.ysj.mapper.OrderDetailMapper" >
  <resultMap id="BaseResultMap" type="com.greyu.ysj.entity.OrderDetail" >
    <id column="order_detail_id" property="orderDetailId" jdbcType="BIGINT" />
    <result column="order_id" property="orderId" jdbcType="BIGINT" />
    <result column="good_id" property="goodId" jdbcType="INTEGER" />
    <result column="count" property="count" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="OrderDetailMap" type="com.greyu.ysj.entity.OrderDetail" >
    <id column="order_detail_id" property="orderDetailId" jdbcType="BIGINT" />
    <result column="order_id" property="orderId" jdbcType="BIGINT" />
    <result column="good_id" property="goodId" jdbcType="INTEGER" />
    <result column="count" property="count" jdbcType="INTEGER" />
    <collection property="good" ofType="com.greyu.ysj.entity.Good">
      <id column="good_id" property="goodId" jdbcType="INTEGER" />
      <result column="category_second_id" property="categorySecondId" jdbcType="INTEGER" />
      <result column="good_name" property="goodName" jdbcType="VARCHAR" />
      <result column="image" property="image" jdbcType="VARCHAR" />
      <result column="price" property="price" jdbcType="DOUBLE" />
      <result column="original_price" property="originalPrice" jdbcType="DOUBLE" />
      <result column="inventory" property="inventory" jdbcType="INTEGER" />
      <result column="sold_count" property="soldCount" jdbcType="INTEGER" />
      <result column="spec" property="spec" jdbcType="VARCHAR" />
      <result column="origin" property="origin" jdbcType="VARCHAR" />
    </collection>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    order_detail_id, order_id, good_id, count
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.greyu.ysj.entity.OrderDetailExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_order_detail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from tb_order_detail
    where order_detail_id = #{orderDetailId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from tb_order_detail
    where order_detail_id = #{orderDetailId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.greyu.ysj.entity.OrderDetailExample" >
    delete from tb_order_detail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.greyu.ysj.entity.OrderDetail" >
    insert into tb_order_detail (order_detail_id, order_id, good_id, 
      count)
    values (#{orderDetailId,jdbcType=BIGINT}, #{orderId,jdbcType=BIGINT}, #{goodId,jdbcType=INTEGER}, 
      #{count,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.greyu.ysj.entity.OrderDetail" >
    insert into tb_order_detail
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="orderDetailId != null" >
        order_detail_id,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="goodId != null" >
        good_id,
      </if>
      <if test="count != null" >
        count,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="orderDetailId != null" >
        #{orderDetailId,jdbcType=BIGINT},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="goodId != null" >
        #{goodId,jdbcType=INTEGER},
      </if>
      <if test="count != null" >
        #{count,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.greyu.ysj.entity.OrderDetailExample" resultType="java.lang.Integer" >
    select count(*) from tb_order_detail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tb_order_detail
    <set >
      <if test="record.orderDetailId != null" >
        order_detail_id = #{record.orderDetailId,jdbcType=BIGINT},
      </if>
      <if test="record.orderId != null" >
        order_id = #{record.orderId,jdbcType=BIGINT},
      </if>
      <if test="record.goodId != null" >
        good_id = #{record.goodId,jdbcType=INTEGER},
      </if>
      <if test="record.count != null" >
        count = #{record.count,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tb_order_detail
    set order_detail_id = #{record.orderDetailId,jdbcType=BIGINT},
      order_id = #{record.orderId,jdbcType=BIGINT},
      good_id = #{record.goodId,jdbcType=INTEGER},
      count = #{record.count,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.greyu.ysj.entity.OrderDetail" >
    update tb_order_detail
    <set >
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=BIGINT},
      </if>
      <if test="goodId != null" >
        good_id = #{goodId,jdbcType=INTEGER},
      </if>
      <if test="count != null" >
        count = #{count,jdbcType=INTEGER},
      </if>
    </set>
    where order_detail_id = #{orderDetailId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.greyu.ysj.entity.OrderDetail" >
    update tb_order_detail
    set order_id = #{orderId,jdbcType=BIGINT},
      good_id = #{goodId,jdbcType=INTEGER},
      count = #{count,jdbcType=INTEGER}
    where order_detail_id = #{orderDetailId,jdbcType=BIGINT}
  </update>
  <select id="getAll" resultMap="OrderDetailMap">
    select *
    from tb_order_detail a, tb_good b
    where a.good_id = b.good_id
  </select>
  <select id="getAllByOrderId" parameterType="Long" resultMap="OrderDetailMap">
    select *
     from tb_order_detail a, tb_good b
     where a.good_id = b.good_id and a.order_id = #{orderId, jdbcType=INTEGER}
  </select>
</mapper>